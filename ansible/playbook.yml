---
- hosts: all
  gather_facts: yes
  vars:
    network_install_http_root: /srv/network-install
    tftp_boot_root: /var/lib/tftpboot
    kickstart_wsgi_app_dir: /srv/kickstart/
    kickstart_wsgi_app: "{{ kickstart_wsgi_app_dir }}/app.py"
  tasks:
    - apt: update_cache=yes state=latest name='{{ item }}' cache_valid_time=20000
      with_items:
        - dnsmasq
        - nginx
        - syslinux
        - syslogd
        - uwsgi
        - uwsgi-plugin-python
        - python-jinja2
        - python-yaml

    # Configure Dnsmasq
    - name: Configure Dnsmasq with /etc/dnsmasq.conf
      template: src=templates/etc/dnsmasq.conf dest=/etc/
      notify: Restart dnsmasq

    # Setup PXE
    - name: Make distros' tftp boot dirs
      file: state=directory path={{ tftp_boot_root }}/{{ item }}/
      with_items:
        - centos7
        - pxelinux.cfg
        - memtest

    - name: Install image for pxe menu background
      copy: src=r29.jpg dest={{ tftp_boot_root }}/

    - name: Copy pxe files from syslinux
      copy: remote_src=yes src=/usr/lib/syslinux/{{ item }} dest={{ tftp_boot_root }}/
      with_items: [ pxelinux.0, vesamenu.c32, reboot.c32 ]

    - template: src=templates/var/lib/tftpboot/pxelinux.cfg/default dest={{ tftp_boot_root }}/pxelinux.cfg/

    - name: Download Memtest
      get_url:
        dest=/home/vagrant/memtest86+-5.01.bin.gz
        url=http://www.memtest.org/download/5.01/memtest86+-5.01.bin.gz
        checksum=md5:14ec4c4d827a49629c41b499303355ed

    - name: Decompress memtest
      command: gunzip --keep /home/vagrant/memtest86+-5.01.bin.gz creates=/home/vagrant/memtest86+-5.01.bin

    - name: Make memtest available for boot
      copy:
        src=/home/vagrant/memtest86+-5.01.bin
        dest={{ tftp_boot_root }}/memtest/memtest
        remote_src=yes

    # Setup Install disk
    # TODO make this all target agnostic
    - name: Create install directory
      file: state=directory path={{ network_install_http_root }}/CentOS-7-x86_64-Minimal-1511

    - name: Download Centos install disk
      get_url:
        dest=/home/vagrant/CentOS-7-x86_64-Minimal-1511.iso
        url=http://mirror.lug.udel.edu/pub/centos/7/isos/x86_64/CentOS-7-x86_64-Minimal-1511.iso
        checksum=md5:88c0437f0a14c6e2c94426df9d43cd67

    - name: Mount Centos install disk
      mount:
        name=/mnt/CentOS-7-x86_64-Minimal-1511
        src=/home/vagrant/CentOS-7-x86_64-Minimal-1511.iso
        fstype=iso9660
        state=mounted

    - name: Copy boot files for distros
      copy: remote_src=yes src=/mnt/CentOS-7-x86_64-Minimal-1511/isolinux/{{ item }} dest={{ tftp_boot_root }}/centos7/
      with_items: [ vmlinuz, initrd.img ]

    # Setup wsgi app to serve kickstart files
    - name: Make app dir
      file: state=directory path=/srv/kickstart/

    - name: Install python wsgi app
      template: src=templates/{{ kickstart_wsgi_app }} dest={{ kickstart_wsgi_app }}
      notify: Restart kickstart app

    - name: Install upstart script
      template: src=templates/etc/init/kickstart.conf dest=/etc/init/kickstart.conf

    - name: Install kickstart app data
      copy: dest={{ kickstart_wsgi_app_dir }}/host_vars.yml content="{{ kickstart_host_vars | to_nice_yaml }}"

    - name: Copy kickstart template files
      copy: src=files/srv/kickstart/templates dest={{ kickstart_wsgi_app_dir }}

    # Setup Nginx to serve the install disk and kickstart
    - template: src=templates/etc/nginx/sites-available/network-install.conf dest=/etc/nginx/sites-available/
      notify: Restart nginx

    - file: state=link src=../sites-available/network-install.conf path=/etc/nginx/sites-enabled/network-install.conf
      notify: Restart nginx

    - file: state=absent path=/etc/nginx/sites-enabled/default
      notify: Restart nginx

  handlers:
    - name: Restart dnsmasq
      service:  name=dnsmasq state=restarted enabled=yes

    - name: Restart nginx
      service: name=nginx state=restarted enabled=yes

    - name: Restart kickstart app
      service: name=kickstart state=restarted enabled=yes
