---
- hosts: all
  gather_facts: yes
  vars:
    network_install_http_root: /srv/network-install
    tftp_boot_root: /var/lib/tftpboot
    kickstart_wsgi_app_dir: /srv/kickstart/
    kickstart_wsgi_app: "{{ kickstart_wsgi_app_dir }}/app.py"
    kickstart_host_vars:
      192.168.42.1:
        nothing: nothing to see
      127.0.0.1:
        nothing: really, nothing to see
  tasks:
    - apt: update_cache=yes state=latest name='{{ item }}' cache_valid_time=20000
      with_items:
        - dnsmasq
        - nginx
        - syslinux
        - syslogd
        - uwsgi
        - uwsgi-plugin-python

    # Configure Dnsmasq
    - name: Configure Dnsmasq with /etc/dnsmasq.conf
      template: src=templates/etc/dnsmasq.conf dest=/etc/
      notify: Restart dnsmasq

    # Setup PXE
    - file: state=directory path={{ tftp_boot_root }}/pxelinux.cfg/

    - copy: src=r29.png dest={{ tftp_boot_root }}/
    - shell: cp /usr/lib/syslinux/pxelinux.0 {{ tftp_boot_root }}/ creates={{ tftp_boot_root }}/pxelinux.0
    - shell: cp /usr/lib/syslinux/vesamenu.c32 {{ tftp_boot_root }}/ creates={{ tftp_boot_root }}/vesamenu.c32

    - template: src=templates/var/lib/tftpboot/pxelinux.cfg/default dest={{ tftp_boot_root }}/pxelinux.cfg/

    # Setup Install disk
    # TODO make this all target agnostic
    - name: Create install directory
      file: state=directory path={{ network_install_http_root }}/CentOS-7-x86_64-Minimal-1511

    - name: Download Centos install disk
      get_url:
        dest=/srv/CentOS-7-x86_64-Minimal-1511.iso
        url=http://mirror.lug.udel.edu/pub/centos/7/isos/x86_64/CentOS-7-x86_64-Minimal-1511.iso
        checksum=md5:88c0437f0a14c6e2c94426df9d43cd67
        backup=yes

    - name: Mount Centos install disk
      mount:
        name=/mnt
        src=/srv/CentOS-7-x86_64-Minimal-1511.iso
        fstype=iso9660
        state=mounted

    - name: Copy installation files
      shell: cp -R /mnt/* {{ network_install_http_root }}/CentOS-7-x86_64-Minimal-1511

    - name: Make distros' tftp boot dirs
      file: state=directory path={{ item }}
      with_items: [ "{{ tftp_boot_root }}/centos7/" ]

    - name: Copy boot files
      shell: cp /mnt/isolinux/{{ item }} {{ tftp_boot_root }}/centos7
      with_items: [ vmlinuz, initrd.img ]

    # Setup Kickstart file for Centos install
    - name: Install Centos Kickstart file
      template: src=templates/{{ tftp_boot_root }}/centos7-ks.cfg dest={{ network_install_http_root }}

    # Setup wsgi app to serve kickstart files
    - name: Make app dir
      file: state=directory path=/srv/kickstart/

    - name: Install python wsgi app
      template: src=templates/{{ kickstart_wsgi_app }} dest={{ kickstart_wsgi_app }}
      notify: Restart kickstart app

    - name: Install upstart script
      template: src=templates/etc/init/kickstart.conf dest=/etc/init/kickstart.conf

    - name: Install kickstart app data
      copy: dest={{ kickstart_wsgi_app_dir }}/host_vars.yml content="{{ kickstart_host_vars | to_nice_yaml }}"

    - name: Copy kickstart template files
      copy: src=files/srv/kickstart/templates dest={{ kickstart_wsgi_app_dir }}

    # Setup Nginx to serve the install disk and kickstart
    - template: src=templates/etc/nginx/sites-available/network-install.conf dest=/etc/nginx/sites-available/
      notify: Restart nginx

    - file: state=link src=../sites-available/network-install.conf path=/etc/nginx/sites-enabled/network-install.conf
      notify: Restart nginx

    - file: state=absent path=/etc/nginx/sites-enabled/default
      notify: Restart nginx

  handlers:
    - name: Restart dnsmasq
      service:  name=dnsmasq state=restarted enabled=yes

    - name: Restart nginx
      service: name=nginx state=restarted enabled=yes

    - name: Restart kickstart app
      service: name=kickstart state=restarted enabled=yes
